<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        SAAAAUgBlns6KwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAEqSURBVFhHYzA2
        Nv6PjE1MTG76+vr+R8Y7N7d/3LW54z85eNqEoitodjw2MjJS+f//PwMID4QDQBjuCKo6YMGsiv/Ozrb/
        czLD4WI4HADCYEdQ1QFzppeCzUiMD4CL4XEACD8eaAf8H3XA8HLAykW1/7PSQ/+3NabDxejqAGyYHAc8
        cnV1PYOM25szjnW3ZZ0hB+dkhB1AtwMZYziA3njUAaMOwHCAhZXVzW1nHvynFp6yZDNp2XDUAegO2HH2
        /v8TV24SjQ9fuk1dB+w5f+//owcXiMbXbl2hrgN2AkPg9NUbROOjl6kcApRiih2w69z9/1duXSUan7l2
        g7oOGPA0sB2I956/SzTefe4edR1AKR76UQAK0tt3LxGNL964Rl0HUIpHHYDfAcb/AZp1djWW2ZanAAAA
        AElFTkSuQmCC
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        CgAAAQoBFqS8ywAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAI5SURBVFhHxVc7
        TsNAEE0HQqKHjgKILUTFCSgp+NgRJRLiLFRUiIZcgkNEosgZ0qSIRINEnI/bmHmbtVmPZ+O1Y5LiJc7s
        zJuX3dnZdStJEjdcHe9M7k6votDrEnqEAWGmgWfYuvCBr8ghQDSaiEP/MOr470Q+JSSOmCIGsRKnCdGo
        8Hi0GwX+M5HFjLwKYnCAS8xBEI3z+7MDCu4zsnXQB6eUq2D4ufXOKWDECFLMx6H3OQn810noP8yCEx/A
        M2wYgw+LSTECN8+X+6H/uZR8QeRvX9cXe6a/BPjAFzGMAxjxmfgLxprbpj3wX8wgF4zD9iXFDgtclMOs
        iSxAFxx3TrEYd9pPqa8rvm/a+1HH+yjwoTC1j/pQW6282uuLKM5EnG5R5aT3uemwwLSrb2avI0IvR56L
        cmJMdTgy5JoMikgFUjL63ZAIVZgmzxS5W7q9mgNzs9qbEgFOisttUeRu0QN6e2bEXubBTYkAN+PoQgAO
        kcyIhiIGNyAC3Cy+BwE4yTIjupoUDKwrAtwsdgABOE4zI1qrFJxiHRHgZnGzygKAuiJsApyXwEQdEbYl
        cCpCCVVF2IqwdBuuQhUR4jYsa0QucBFhbUSrWnEVlIkAJxtbtmIMSocRDhAzgQtsIsSDLTuM6MNyHA9x
        lJoJXGARwZE/jgHxQkKXiX8RwS8kCvYr2bDOcuhp51yAfCUDtnsp1djqtTyFnontvJhkQE0sC3Pzr2Ym
        1BZd9okNv5xyUNfSbbvB1/Ok9QtUYznpS/jOpwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>