<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAUgAAAFIAZZ7OisAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABKklEQVRYR2MwNjb+j4xNTExu+vr6/kfGOze3f9y1ueM/OXjahKIraHY8NjIyUvn//z8DCA+EA0AY
        7giqOmDBrIr/zs62/3Myw+FiOBwAwmBHUNUBc6aXgs1IjA+Ai+FxAAg/HmgH/B91wPBywMpFtf+z0kP/
        tzWmw8Xo6gBsmBwHPHJ1dT2DjNubM451t2WdIQfnZIQdQLcDGWM4gN541AGjDsBwgIWV1c1tZx78pxae
        smQzadlw1AHoDthx9v7/E1duEo0PX7pNXQfsOX/v/6MHF4jG125doa4DdgJD4PTVG0Tjo5epHAKUYood
        sOvc/f9Xbl0lGp+5doO6DhjwNLAdiPeev0s03n3uHnUdQCke+lEACtLbdy8RjS/euEZdB1CKRx2A3wHG
        /wGadXY1ltmWpwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAQoAAAEKARakvMsAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAACOUlEQVRYR8VXO07DQBBNB0Kih44CiC1ExQkoKfjYESUS4ixUVIiGXIJDRKLIGdKkiESDRJyP25h5
        m7VZj2fjtWOS4iXO7Mybl93Z2XUrSRI3XB3vTO5Or6LQ6xJ6hAFhpoFn2Lrwga/IIUA0mohD/zDq+O9E
        PiUkjpgiBrESpwnRqPB4tBsF/jORxYy8CmJwgEvMQRCN8/uzAwruM7J10AenlKtg+Ln1zilgxAhSzMeh
        9zkJ/NdJ6D/MghMfwDNsGIMPi0kxAjfPl/uh/7mUfEHkb1/XF3umvwT4wBcxjAMY8Zn4C8aa26Y98F/M
        IBeMw/YlxQ4LXJTDrIksQBccd06xGHfaT6mvK75v2vtRx/so8KEwtY/6UFutvNrriyjORJxuUeWk97np
        sMC0q29mryNCL0eei3JiTHU4MuSaDIpIBVIy+t2QCFWYJs8UuVu6vZoDc7PamxIBTorLbVHkbtEDentm
        xF7mwU2JADfj6EIADpHMiIYiBjcgAtwsvgcBOMkyI7qaFAysKwLcLHYAAThOMyNaqxScYh0R4GZxs8oC
        gLoibAKcl8BEHRG2JXAqQglVRdiKsHQbrkIVEeI2LGtELnARYW1Eq1pxFZSJACcbW7ZiDEqHEQ4QM4EL
        bCLEgy07jOjDchwPcZSaCVxgEcGRP44B8UJCl4l/EcEvJAr2K9mwznLoaedcgHwlA7Z7KdXY6rU8hZ6J
        7byYZEBNLAtz869mJtQWXfaJDb+cclDX0m27wdfzpPULVGM56Uv4zqcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>